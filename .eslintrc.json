{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "prettier",
    "plugin:flowtype/recommended",
    "plugin:prettier/recommended",
    "prettier/flowtype",
    "prettier/react"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "babel-eslint",
  "plugins": [
    "react",
    "prettier",
    "compat",
    "flowtype",
    "import",
    "jest",
    "jsx-a11y",
    "promise",
    "react-hooks",
    "testcafe"
  ],
  "rules": {
    "arrow-parens": "off",
    "compat/compat": "error",
    "consistent-return": "off",
    "comma-dangle": "off",
    "flowtype/boolean-style": ["error", "boolean"],
    "flowtype/define-flow-type": "warn",
    "flowtype/delimiter-dangle": ["error", "never"],
    "flowtype/generic-spacing": ["error", "never"],
    "flowtype/no-primitive-constructor-types": "error",
    "flowtype/no-weak-types": "warn",
    "flowtype/object-type-delimiter": ["error", "comma"],
    "flowtype/require-parameter-type": "off",
    "flowtype/require-return-type": "off",
    "flowtype/require-valid-file-annotation": "off",
    "flowtype/semi": ["error", "always"],
    "flowtype/union-intersection-spacing": ["error", "always"],
    "flowtype/use-flow-type": "error",
    "flowtype/valid-syntax": "error",
    "generator-star-spacing": "off",
    "import/no-unresolved": "off",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "jsx-a11y/anchor-is-valid": "off",
    "no-console": "off",
    "no-use-before-define": "off",
    "no-multi-assign": "off",
    "prettier/prettier": "error",
    "promise/param-names": "error",
    "promise/always-return": "error",
    "promise/catch-or-return": "error",
    "promise/no-native": "off",
    "react/sort-comp": [
      "error",
      {
        "order": [
          "type-annotations",
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ]
      }
    ],
    "react/jsx-no-bind": "off",
    "react/jsx-filename-extension": [
      "error",
      { "extensions": [".js", ".jsx"] }
    ],
    "react/prefer-stateless-function": "off"
  }
}
